{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getData } from \"@/api\";\nimport * as echarts from 'echarts';\nexport default {\n  data() {\n    return {\n      countData: [{\n        name: \"今日支付订单\",\n        value: 1234,\n        icon: \"success\",\n        color: \"#2ec7c9\"\n      }, {\n        name: \"今日收藏订单\",\n        value: 210,\n        icon: \"star-on\",\n        color: \"#ffb980\"\n      }, {\n        name: \"今日未支付订单\",\n        value: 1234,\n        icon: \"s-goods\",\n        color: \"#5ab1ef\"\n      }, {\n        name: \"本月支付订单\",\n        value: 1234,\n        icon: \"success\",\n        color: \"#2ec7c9\"\n      }, {\n        name: \"本月收藏订单\",\n        value: 210,\n        icon: \"star-on\",\n        color: \"#ffb980\"\n      }, {\n        name: \"本月未支付订单\",\n        value: 1234,\n        icon: \"s-goods\",\n        color: \"#5ab1ef\"\n      }],\n      tableData: [],\n      tableLabel: {\n        name: '课程',\n        todayBuy: '今日购买',\n        monthBuy: '本月购买',\n        totalBuy: '总购买'\n      }\n    };\n  },\n  mounted() {\n    getData().then(_ref => {\n      let {\n        data\n      } = _ref;\n      const {\n        tableData\n      } = data.data;\n      this.tableData = tableData; /*这里就是箭头函数的用法了，this一直向外寻找到vue实例*/\n\n      // 基于准备好的dom，初始化echarts实例\n      const echarts1 = echarts.init(this.$refs.echarts1);\n      // 指定图表的配置项和数据\n      var echarts1Option = {};\n      // 处理数据xAxis\n      const {\n        orderData,\n        userData,\n        videoData\n      } = data.data;\n      const xAxis = Object.keys(orderData.data[0]);\n      const xAxisData = {\n        data: xAxis\n      };\n      echarts1Option.xAxis = xAxisData;\n      echarts1Option.yAxis = {};\n      echarts1Option.legend = xAxisData;\n      echarts1Option.series = [];\n      xAxis.forEach(key => {\n        echarts1Option.series.push({\n          name: key,\n          data: orderData.data.map(item => item[key]),\n          type: 'line'\n        });\n      });\n      console.log(echarts1Option);\n      // 使用刚指定的配置项和数据显示图表。\n      echarts1.setOption(echarts1Option);\n    });\n  }\n};","map":{"version":3,"names":["getData","echarts","data","countData","name","value","icon","color","tableData","tableLabel","todayBuy","monthBuy","totalBuy","mounted","then","_ref","echarts1","init","$refs","echarts1Option","orderData","userData","videoData","xAxis","Object","keys","xAxisData","yAxis","legend","series","forEach","key","push","map","item","type","console","log","setOption"],"sources":["src/views/HomePage.vue"],"sourcesContent":["<template>\r\n  <el-row>\r\n\r\n    <!--    网格布局左8-->\r\n    <el-col :span=\"8\" style=\"padding-right: 13px\">\r\n      <div class=\"grid-content bg-purple\">\r\n        <!--    卡片-->\r\n        <el-card class=\"box-card\">\r\n\r\n          <div class=\"user\">\r\n            <img src=\"../assets/images/user.png\" alt=\"\">\r\n            <div class=\"userInfo\">\r\n              <p class=\"name\">Admin</p>\r\n              <p class=\"access\">超级管理员</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"login\">\r\n            <p>上次登录时间：<span>2023.2.3</span></p>\r\n            <p>上次登录地点：<span>贵州</span></p>\r\n          </div>\r\n        </el-card>\r\n\r\n        <!--      表格-卡片嵌套-->\r\n        <el-card style=\"margin-top: 30px;height: 460px\">\r\n\r\n          <el-table :data=\"tableData\">\r\n            <el-table-column v-for=\"(val,key) in tableLabel\" :prop=\"key\" :label=\"val\" :key=\"key\"></el-table-column>\r\n          </el-table>\r\n\r\n        </el-card>\r\n      </div>\r\n    </el-col>\r\n\r\n\r\n    <!--    网格布局右16-->\r\n    <el-col :span=\"16\">\r\n      <div class=\"num\">\r\n        <el-card v-for=\"item in countData\" :key=\"item.name\"\r\n                 :body-style=\"{display:'flex',padding:0}\"\r\n        >\r\n          <i class=\"icon\" :class=\"`el-icon-${item.icon}`\"\r\n             :style=\"{background:item.color}\"></i>\r\n          <div class=\"detail\">\r\n            <p class=\"price\">￥{{ item.value }}</p>\r\n            <p class=\"text\">{{ item.name }}</p>\r\n          </div>\r\n        </el-card>\r\n\r\n\r\n      </div>\r\n    </el-col>\r\n\r\n\r\n    <!--  折线图-->\r\n    <el-card style=\"height: 292px\">\r\n           <div ref=\"echarts1\" style=\"height: 280px\"></div>\r\n    </el-card>\r\n\r\n    <!--  柱状饼图-->\r\n    <div class=\"graph\">\r\n      <el-card style=\"height: 260px\"></el-card>\r\n      <el-card style=\"height: 260px\"></el-card>\r\n    </div>\r\n\r\n\r\n  </el-row>\r\n</template>\r\n\r\n<script>\r\nimport {getData} from \"@/api\";\r\nimport * as echarts from 'echarts'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      countData: [\r\n        {\r\n          name: \"今日支付订单\",\r\n          value: 1234,\r\n          icon: \"success\",\r\n          color: \"#2ec7c9\",\r\n        },\r\n        {\r\n          name: \"今日收藏订单\",\r\n          value: 210,\r\n          icon: \"star-on\",\r\n          color: \"#ffb980\",\r\n        },\r\n        {\r\n          name: \"今日未支付订单\",\r\n          value: 1234,\r\n          icon: \"s-goods\",\r\n          color: \"#5ab1ef\",\r\n        },\r\n        {\r\n          name: \"本月支付订单\",\r\n          value: 1234,\r\n          icon: \"success\",\r\n          color: \"#2ec7c9\",\r\n        },\r\n        {\r\n          name: \"本月收藏订单\",\r\n          value: 210,\r\n          icon: \"star-on\",\r\n          color: \"#ffb980\",\r\n        },\r\n        {\r\n          name: \"本月未支付订单\",\r\n          value: 1234,\r\n          icon: \"s-goods\",\r\n          color: \"#5ab1ef\",\r\n        },\r\n      ],\r\n      tableData: [],\r\n      tableLabel: {\r\n        name: '课程',\r\n        todayBuy: '今日购买',\r\n        monthBuy: '本月购买',\r\n        totalBuy: '总购买'\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    getData().then(({data}) => {\r\n      const {tableData} = data.data;\r\n      this.tableData = tableData;  /*这里就是箭头函数的用法了，this一直向外寻找到vue实例*/\r\n\r\n\r\n      // 基于准备好的dom，初始化echarts实例\r\n      const echarts1 = echarts.init(this.$refs.echarts1)\r\n      // 指定图表的配置项和数据\r\n      var echarts1Option = {}\r\n      // 处理数据xAxis\r\n      const { orderData, userData, videoData } = data.data\r\n      const xAxis = Object.keys(orderData.data[0])\r\n      const xAxisData = {\r\n        data: xAxis\r\n      }\r\n      echarts1Option.xAxis = xAxisData\r\n      echarts1Option.yAxis = {}\r\n      echarts1Option.legend = xAxisData\r\n      echarts1Option.series = []\r\n      xAxis.forEach(key => {\r\n        echarts1Option.series.push({\r\n          name: key,\r\n          data: orderData.data.map(item => item[key]),\r\n          type: 'line'\r\n        })\r\n      })\r\n      console.log(echarts1Option)\r\n      // 使用刚指定的配置项和数据显示图表。\r\n      echarts1.setOption(echarts1Option)\r\n    })\r\n\r\n\r\n    \r\n\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.user {\r\n  padding-bottom: 20px;\r\n  margin-bottom: 20px;\r\n  border-bottom: 1px solid #999999;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  img {\r\n    margin-right: 40px;\r\n    width: 150px;\r\n    height: 150px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .userInfo {\r\n    .name {\r\n      font-size: 32px;\r\n      margin-top: 10px;\r\n    }\r\n\r\n    .access {\r\n      color: #999999;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n.login {\r\n  p {\r\n    line-height: 28px;\r\n    font-size: 14px;\r\n    color: #999999;\r\n\r\n    span {\r\n      color: #666666;\r\n      margin-left: 60px;\r\n    }\r\n  }\r\n}\r\n\r\n.num {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n\r\n  .icon {\r\n    width: 80px;\r\n    height: 80px;\r\n    font-size: 30px;\r\n    text-align: center;\r\n    line-height: 80px;\r\n    color: white;\r\n  }\r\n\r\n  .detail {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    margin-left: 15px;\r\n\r\n    //价格\r\n    .price {\r\n      font-size: 30px;\r\n      margin-bottom: 10px;\r\n      line-height: 30px;\r\n      height: 30px;\r\n    }\r\n\r\n    //文字\r\n    .text {\r\n      color: #999999;\r\n      font-size: 14px;\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  //自动掉落\r\n  .el-card {\r\n    width: 32%;\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n\r\n.graph {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n\r\n  .el-card {\r\n    width: 48%;\r\n  }\r\n}\r\n\r\n\r\n</style>"],"mappings":";AAqEA,SAAAA,OAAA;AACA,YAAAC,OAAA;AAEA;EACAC,KAAA;IACA;MACAC,SAAA,GACA;QACAC,IAAA;QACAC,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAH,IAAA;QACAC,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAH,IAAA;QACAC,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAH,IAAA;QACAC,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAH,IAAA;QACAC,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAH,IAAA;QACAC,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,EACA;MACAC,SAAA;MACAC,UAAA;QACAL,IAAA;QACAM,QAAA;QACAC,QAAA;QACAC,QAAA;MACA;IACA;EACA;EACAC,QAAA;IACAb,OAAA,GAAAc,IAAA,CAAAC,IAAA;MAAA;QAAAb;MAAA,IAAAa,IAAA;MACA;QAAAP;MAAA,IAAAN,IAAA,CAAAA,IAAA;MACA,KAAAM,SAAA,GAAAA,SAAA;;MAGA;MACA,MAAAQ,QAAA,GAAAf,OAAA,CAAAgB,IAAA,MAAAC,KAAA,CAAAF,QAAA;MACA;MACA,IAAAG,cAAA;MACA;MACA;QAAAC,SAAA;QAAAC,QAAA;QAAAC;MAAA,IAAApB,IAAA,CAAAA,IAAA;MACA,MAAAqB,KAAA,GAAAC,MAAA,CAAAC,IAAA,CAAAL,SAAA,CAAAlB,IAAA;MACA,MAAAwB,SAAA;QACAxB,IAAA,EAAAqB;MACA;MACAJ,cAAA,CAAAI,KAAA,GAAAG,SAAA;MACAP,cAAA,CAAAQ,KAAA;MACAR,cAAA,CAAAS,MAAA,GAAAF,SAAA;MACAP,cAAA,CAAAU,MAAA;MACAN,KAAA,CAAAO,OAAA,CAAAC,GAAA;QACAZ,cAAA,CAAAU,MAAA,CAAAG,IAAA;UACA5B,IAAA,EAAA2B,GAAA;UACA7B,IAAA,EAAAkB,SAAA,CAAAlB,IAAA,CAAA+B,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAH,GAAA;UACAI,IAAA;QACA;MACA;MACAC,OAAA,CAAAC,GAAA,CAAAlB,cAAA;MACA;MACAH,QAAA,CAAAsB,SAAA,CAAAnB,cAAA;IACA;EAMA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}